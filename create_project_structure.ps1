# اسکریپت PowerShell برای ساخت ساختار پروژه مطابق نمودار داده شده
$folders = @(
    'public',
    'src/components/ui',
    'src/contexts',
    'src/hooks',
    'src/lib',
    'src/pages'
)

$files = @(
    'Dockerfile.production',
    'index.html',
    'nginx.conf',
    'package.json',
    'postcss.config.js',
    'README-CROSSPLATFORM.md',
    'README.md',
    'tailwind.config.ts',
    'tsconfig.app.json',
    'tsconfig.json',
    'tsconfig.node.json',
    'vite.config.ts',
    'public/placeholder.svg',
    'public/robots.txt',
    'src/components/ui/accordion.tsx',
    'src/components/ui/alert-dialog.tsx',
    'src/components/ui/alert.tsx',
    'src/components/ui/aspect-ratio.tsx',
    'src/components/ui/avatar.tsx',
    'src/components/ui/badge.tsx',
    'src/components/ui/breadcrumb.tsx',
    'src/components/ui/button.tsx',
    'src/components/ui/calendar.tsx',
    'src/components/ui/card.tsx',
    'src/components/ui/carousel.tsx',
    'src/components/ui/chart.tsx',
    'src/components/ui/checkbox.tsx',
    'src/components/ui/collapsible.tsx',
    'src/components/ui/command.tsx',
    'src/components/ui/context-menu.tsx',
    'src/components/ui/dialog.tsx',
    'src/components/ui/drawer.tsx',
    'src/components/ui/dropdown-menu.tsx',
    'src/components/ui/form.tsx',
    'src/components/ui/hover-card.tsx',
    'src/components/ui/input-otp.tsx',
    'src/components/ui/input.tsx',
    'src/components/ui/label.tsx',
    'src/components/ui/menubar.tsx',
    'src/components/ui/navigation-menu.tsx',
    'src/components/ui/pagination.tsx',
    'src/components/ui/popover.tsx',
    'src/components/ui/progress.tsx',
    'src/components/ui/radio-group.tsx',
    'src/components/ui/resizable.tsx',
    'src/components/ui/scroll-area.tsx',
    'src/components/ui/select.tsx',
    'src/components/ui/separator.tsx',
    'src/components/ui/sheet.tsx',
    'src/components/ui/sidebar.tsx',
    'src/components/ui/skeleton.tsx',
    'src/components/ui/slider.tsx',
    'src/components/ui/sonner.tsx',
    'src/components/ui/switch.tsx',
    'src/components/ui/table.tsx',
    'src/components/ui/tabs.tsx',
    'src/components/ui/textarea.tsx',
    'src/components/ui/toast.tsx',
    'src/components/ui/toaster.tsx',
    'src/components/ui/toggle-group.tsx',
    'src/components/ui/toggle.tsx',
    'src/components/ui/tooltip.tsx',
    'src/components/ui/use-toast.ts',
    'src/components/CtaSection.tsx',
    'src/components/Footer.tsx',
    'src/components/Header.tsx',
    'src/components/HeroSection.tsx',
    'src/components/HowItWorks.tsx',
    'src/components/LanguageSelector.tsx',
    'src/components/ModernHeroSection.tsx',
    'src/components/PopularServices.tsx',
    'src/components/Testimonials.tsx',
    'src/components/TypewriterText.tsx',
    'src/components/WhyChooseUs.tsx',
    'src/contexts/LanguageContext.tsx',
    'src/hooks/use-mobile.tsx',
    'src/hooks/use-toast.ts',
    'src/hooks/useLanguage.ts',
    'src/lib/utils.ts',
    'src/pages/About.tsx',
    'src/pages/Admin.tsx',
    'src/pages/Blog.tsx',
    'src/pages/Contact.tsx',
    'src/pages/ElectricityService.tsx',
    'src/pages/FAQ.tsx',
    'src/pages/HeatingService.tsx',
    'src/pages/HighSecurity.tsx',
    'src/pages/HowItWorksDetailed.tsx',
    'src/pages/Index.tsx',
    'src/pages/MaintenanceService.tsx',
    'src/pages/NotFound.tsx',
    'src/pages/PlumbingService.tsx',
    'src/pages/Privacy.tsx',
    'src/pages/Professionals.tsx',
    'src/pages/QualityGuarantee.tsx',
    'src/pages/ServiceRequest.tsx',
    'src/pages/Services.tsx',
    'src/pages/Support247.tsx',
    'src/pages/Terms.tsx',
    'src/pages/TransparentPricing.tsx',
    'App.css',
    'App.tsx',
    'index.css',
    'main.tsx',
    '.dockerignore',
    '.gitignore',
    'capacitor.config.ts',
    'components.json',
    'docker-compose.md',
    'Dockerfile.development',
    'eslint.config.js'
)

# --- Batishome structure ---
$folders += @(
    'batishome/src/components/ui',
    'batishome/src/contexts',
    'batishome/src/hooks',
    'batishome/src/lib',
    'batishome/src/pages'
)

$files += @(
    'batishome/src/components/ui/button.tsx',
    'batishome/src/components/ui/input.tsx',
    'batishome/src/components/CtaSection.tsx',
    'batishome/src/components/Footer.tsx',
    'batishome/src/components/Header.tsx',
    'batishome/src/components/HowItWorks.tsx',
    'batishome/src/components/LanguageSelector.tsx',
    'batishome/src/components/ModernHeroSection.tsx',
    'batishome/src/components/PopularServices.tsx',
    'batishome/src/components/Testimonials.tsx',
    'batishome/src/components/TypewriterText.tsx',
    'batishome/src/components/WhyChooseUs.tsx',
    'batishome/src/contexts/LanguageContext.tsx',
    'batishome/src/hooks/useLanguage.ts',
    'batishome/src/lib/utils.ts',
    'batishome/src/pages/About.tsx',
    'batishome/src/pages/Admin.tsx',
    'batishome/src/pages/Blog.tsx',
    'batishome/src/pages/Contact.tsx',
    'batishome/src/pages/FAQ.tsx',
    'batishome/src/pages/HighSecurity.tsx',
    'batishome/src/pages/Index.tsx',
    'batishome/src/pages/NotFound.tsx',
    'batishome/src/pages/Privacy.tsx',
    'batishome/src/pages/Professionals.tsx',
    'batishome/src/pages/ServiceRequest.tsx',
    'batishome/src/pages/Services.tsx',
    'batishome/src/pages/Terms.tsx',
    'batishome/src/pages/App.tsx',
    'batishome/App.css',
    'batishome/index.css',
    'batishome/main.tsx',
    'batishome/.dockerignore',
    'batishome/components.json',
    'batishome/docker-compose.md',
    'batishome/docker-compose.yml',
    'batishome/Dockerfile.development',
    'batishome/Dockerfile.production',
    'batishome/eslint.config.js',
    'batishome/index.html',
    'batishome/nginx.conf',
    'batishome/package.json',
    'batishome/postcss.config.js',
    'batishome/README-CROSSPLATFORM.md',
    'batishome/README.md',
    'batishome/tailwind.config.ts',
    'batishome/tsconfig.app.json',
    'batishome/tsconfig.json',
    'batishome/tsconfig.node.json',
    'batishome/vite.config.ts'
)

# ساخت پوشه‌ها
foreach ($folder in $folders) {
    if (-not (Test-Path $folder)) {
        New-Item -ItemType Directory -Path $folder | Out-Null
    }
}

# ساخت فایل‌ها
foreach ($file in $files) {
    if (-not (Test-Path $file)) {
        New-Item -ItemType File -Path $file | Out-Null
    }
}

Write-Output "Project structure created successfully!" 